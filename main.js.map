{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./game.ts","webpack:///./gameObject.ts","webpack:///./DRAW_ELEMENTS.ts","webpack:///./functions.ts","webpack:///./CHARACTER_WINDOW.ts","webpack:///./DIALOG.ts","webpack:///./text.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DRAW_ELEMENTS_1","functions_1","gameObject_1","DIALOG_1","widthButton","board","width","yButton1","height","yButton2","canvas","document","getElementById","context","getContext","Draw","DrawElements","style","position","marginTop","marginLeft","answer","dialog","Dialog","fillTextButton","lineHeight","drawBoard","url","drawCustomer","customer","drawButton","textIn","buttonText","button1","button2","button3","button4","mouseCanvas","xmlTest","XMLHttpRequest","open","send","console","log","responseXML","getElementsByTagName","innerHTML","mouse","x","y","ask","specific","statisfactory","negative","answerAsk","positiv","answerStat","this","flag","pict","w","h","ctx","image","Image","src","window","addEventListener","drawImage","fillStyle","fillRect","text","maxWidth","left","font","words","split","countWords","length","line","testLine","measureText","centr","fillText","game_1","CHARACTER_WINDOW_1","countPlayer","redrawing","clearRect","max","min","textCustomer","random","Math","floor","e","pageX","offsetLeft","pageY","offsetTop","endOfGame","check","checkGameProcess","linkAnswerSeller","characterWindow","endGameFlag","end","gameOver","text_1","gameStep","linkStep","linkAnswerCustomer","points","transition","idPhrase","undefined","firstRandom","getStep","idPhrasesSeller","getPhraseSeller","getTextSeller","getPointsPhrase","getLinkAnswerCustomer","index","alert","button","phrase","checkStepPhrase","getAnswerCustomer","getTextCustomer","getNextStep","getLinkAnswerSeller","xml","step","idPhrases","phrases","children","phrasesResult","j","Number","id","question","next","phraseCustomer","phrasesCustomer","nextStep","link","type","tagName"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mFClFA,IAAAC,EAAApC,EAAA,GACAqC,EAAArC,EAAA,GACAsC,EAAAtC,EAAA,GAEAuC,EAAAvC,EAAA,GAKWE,EAAAsC,YAAcF,EAAAG,MAAMC,MAAM,EAAI,GAC9BxC,EAAAyC,SAAWL,EAAAG,MAAMG,OAAS,IAAM,EAChC1C,EAAA2C,SAAWP,EAAAG,MAAMG,OAAS,GAAK,EAE/B1C,EAAA4C,OAA+CC,SAASC,eAAe,aACvE9C,EAAA+C,QAAU/C,EAAA4C,OAAOI,WAAW,MACvC,IAAIC,EAAO,IAAIf,EAAAgB,aAEflD,EAAA4C,OAAOF,OAASN,EAAAG,MAAMG,OACtB1C,EAAA4C,OAAOJ,MAAQJ,EAAAG,MAAMC,MACrBxC,EAAA4C,OAAOO,MAAMC,SAAW,WACxBpD,EAAA4C,OAAOO,MAAME,UAAY,OACzBrD,EAAA4C,OAAOO,MAAMG,WAAa,OAGftD,EAAAuD,OAAmB,GAGnBvD,EAAAwD,OAAS,IAAInB,EAAAoB,OACxBzD,EAAAwD,OAAOE,iBAEI1D,EAAA2D,WAAa,GAGb3D,EAAAsD,WAAa,EACbtD,EAAAqD,UAAY,GAevBJ,EAAKW,UAAU5D,EAAA4C,OAAQR,EAAAG,MAAMsB,KAC7BZ,EAAKa,aAAa9D,EAAA4C,OAAQR,EAAA2B,SAASF,IAAK,IAAK,KAC7CZ,EAAKe,WAAWhE,EAAA4C,OAAQ,EAAG5C,EAAAyC,SAAUzC,EAAAsC,YAAa,IAClDW,EAAKe,WAAWhE,EAAA4C,OAAQ,EAAG5C,EAAAyC,SAAW,IAAKzC,EAAAsC,YAAa,IACxDW,EAAKe,WAAWhE,EAAA4C,OAAQ5C,EAAAsC,YAAc,GAAItC,EAAAyC,SAAUzC,EAAAsC,YAAa,IACjEW,EAAKe,WAAWhE,EAAA4C,OAAQ5C,EAAAsC,YAAc,GAAItC,EAAAyC,SAAW,IAAKzC,EAAAsC,YAAa,IAMvEW,EAAKgB,OAAOjE,EAAA+C,QAASX,EAAA8B,WAAWC,QAASnE,EAAAsD,WAAYtD,EAAAyC,SAAWzC,EAAA2D,WAAY3D,EAAAsC,YAAatC,EAAA2D,WAAY,UACrGV,EAAKgB,OAAOjE,EAAA+C,QAASX,EAAA8B,WAAWE,QAAUpE,EAAAsD,WAAatD,EAAAsC,YAAc,GAAKtC,EAAAyC,SAAWzC,EAAA2D,WAAY3D,EAAAsC,YAAatC,EAAA2D,WAAY,UAC1HV,EAAKgB,OAAOjE,EAAA+C,QAASX,EAAA8B,WAAWG,QAASrE,EAAAsD,WAAYtD,EAAAyC,SAAW,GAAK,GAAIzC,EAAAsC,YAAatC,EAAA2D,WAAY,UAClGV,EAAKgB,OAAOjE,EAAA+C,QAASX,EAAA8B,WAAWI,QAAUtE,EAAAsD,WAAatD,EAAAsC,YAAc,GAAKtC,EAAAyC,SAAW,GAAK,GAAIzC,EAAAsC,YAAatC,EAAA2D,WAAY,UACvHxB,EAAAoC,cAGA,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,KAAK,MAAO,UAAU,GAC9BF,EAAQE,KAAK,MAAO,0BAAkC,GACtDF,EAAQG,OACRC,QAAQC,IAAI,SAAWL,EAAQM,YAAYC,qBAAqB,UAAU,GAAGA,qBAAqB,UAAU,GAAGA,qBAAqB,QAAQ,GAAGC,0FCvEpIhF,EAAAuC,MAAQ,CACfC,MAAO,KACPE,OAAQ,IACRmB,IAAK,kBAGE7D,EAAA+D,SAAW,CAClBvB,MAAO,IACPE,OAAQ,IACRmB,IAAK,sBAEE7D,EAAAiF,MAAQ,CACfC,EAAE,EACFC,EAAE,GAEKnF,EAAAkE,WAAa,CACpBC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,MAGFtE,EAAAoF,IAAM,CACbC,SAAU,GACVC,cAAe,GACfC,SAAU,IAGHvF,EAAAwF,UAAY,CACnBC,QAAS,GACTH,cAAe,GACfC,SAAU,IAGHvF,EAAA0F,WAAa,CACpBD,QAAS,GACTH,cAAe,GACfC,SAAU,mFCrCd,IAAArC,EAAA,oBAAAA,IACIyC,KAAAC,MAAgB,EAqLpB,OAnLI1C,EAAApB,UAAA8B,UAAA,SAAUhB,EAA2BiD,EAAcC,EAAYC,GAC3D,IAAIC,EAAMpD,EAAOI,WAAW,MACxBiD,EAAQ,IAAIC,MAChBD,EAAME,IAAMN,EACK,GAAbF,KAAKC,KACLQ,OAAOC,iBAAiB,OAAQ,WAC5BL,EAAIM,UAAUL,EAAO,EAAG,EAAGrD,EAAOJ,MAAOI,EAAOF,QAEhDsD,EAAIO,UAAY,kBAChBP,EAAIQ,SAAS,EAAI5D,EAAOF,OAAS,IAAME,EAAOJ,MAAO,QAGzDwD,EAAIM,UAAUL,EAAO,EAAG,EAAGrD,EAAOJ,MAAOI,EAAOF,QAEhDsD,EAAIO,UAAY,kBAChBP,EAAIQ,SAAS,EAAI5D,EAAOF,OAAS,IAAME,EAAOJ,MAAO,OAI7DU,EAAApB,UAAAgC,aAAA,SAAalB,EAA2BiD,EAAcC,EAAYC,GAC9D,IAAIC,EAAMpD,EAAOI,WAAW,MACxBiD,EAAQ,IAAIC,MAChBD,EAAME,IAAMN,EACK,GAAbF,KAAKC,KACLQ,OAAOC,iBAAiB,OAAQ,WAC5BL,EAAIM,UAAUL,EAAQrD,EAAOJ,MAAQsD,EAAKlD,EAAOF,OAASqD,EAAI,IAAMD,EAAGC,KAG3EC,EAAIM,UAAUL,EAAQrD,EAAOJ,MAAQsD,EAAKlD,EAAOF,OAASqD,EAAI,IAAMD,EAAGC,IAI/E7C,EAAApB,UAAAkC,WAAA,SAAWpB,EAA2BsC,EAAWC,EAAW3C,EAAeE,GACvE,IAAIsD,EAAMpD,EAAOI,WAAW,MACX,GAAb2C,KAAKC,KACLQ,OAAOC,iBAAiB,OAAQ,WAC5BL,EAAIO,UAAY,wBAChBP,EAAIQ,SAAStB,EAAGC,EAAG3C,EAAOE,MAG9BsD,EAAIO,UAAY,wBAChBP,EAAIQ,SAAStB,EAAGC,EAAG3C,EAAOE,KAyElCQ,EAAApB,UAAAmC,OAAA,SAAOlB,EAAS0D,EAAMnD,EAAYD,EAAWqD,EAAU/C,EAAYP,GAC/D,IAAIuD,EAAOrD,EAAa,EAGxB,GAAiB,GAAbqC,KAAKC,KACLQ,OAAOC,iBAAiB,OAAQ,WAC5BtD,EAAQ6D,KAAO,eAIf,IAHA,IAAIC,EAAQJ,EAAKK,MAAM,KACnBC,EAAaF,EAAMG,OACnBC,EAAO,GACFtF,EAAI,EAAGA,EAAIoF,EAAYpF,IAAK,CACjC,IAAIuF,EAAWD,EAAOJ,EAAMlF,GAAK,IAEjC,GADgBoB,EAAQoE,YAAYD,GAAU1E,MAC9BkE,EAAU,CACtB,GAAgB,UAAZtD,EAAsB,CACtB,IAAIgE,EAAQV,EAAW,EAAI3D,EAAQoE,YAAYF,GAAMzE,MAAQ,EAC7Dc,EAAaqD,EAAOS,EAExBrE,EAAQwD,UAAY,QACpBxD,EAAQsE,SAASJ,EAAM3D,EAAYD,GACnC4D,EAAOJ,EAAMlF,GAAK,IAClB0B,GAAaM,OAGbsD,EAAOC,EAGf,GAAgB,UAAZ9D,EAAsB,CAClBgE,EAAQV,EAAW,EAAI3D,EAAQoE,YAAYF,GAAMzE,MAAQ,EAC7Dc,EAAaqD,EAAOS,EAExBrE,EAAQwD,UAAY,QACpBxD,EAAQsE,SAASJ,EAAM3D,EAAYD,SAGvC,CACAN,EAAQ6D,KAAO,eAIf,IAHA,IAAIC,EAAQJ,EAAKK,MAAM,KACnBC,EAAaF,EAAMG,OACnBC,EAAO,GACFtF,EAAI,EAAGA,EAAIoF,EAAYpF,IAAK,CACjC,IAAIuF,EAAWD,EAAOJ,EAAMlF,GAAK,IAEjC,GADgBoB,EAAQoE,YAAYD,GAAU1E,MAC9BkE,EAAU,CACtB,GAAgB,UAAZtD,EAAsB,CACtB,IAAIgE,EAAQV,EAAW,EAAI3D,EAAQoE,YAAYF,GAAMzE,MAAQ,EAC7Dc,EAAaqD,EAAOS,EAExBrE,EAAQwD,UAAY,QACpBxD,EAAQsE,SAASJ,EAAM3D,EAAYD,GACnC4D,EAAOJ,EAAMlF,GAAK,IAClB0B,GAAaM,OAGbsD,EAAOC,EAGf,GAAgB,UAAZ9D,EAAsB,CAClBgE,EAAQV,EAAW,EAAI3D,EAAQoE,YAAYF,GAAMzE,MAAQ,EAC7Dc,EAAaqD,EAAOS,EAExBrE,EAAQwD,UAAY,QACpBxD,EAAQsE,SAASJ,EAAM3D,EAAYD,KAG/CH,EAtLA,GAAalD,EAAAkD,8FCCb,IAAAd,EAAAtC,EAAA,GACAoC,EAAApC,EAAA,GACAwH,EAAAxH,EAAA,GACAyH,EAAAzH,EAAA,GAGWE,EAAAwH,YAAc,EACzB,IAEIvE,EAAO,IAAIf,EAAAgB,aAgBf,SAASuE,EAAU7E,EAA2BsC,EAAWC,EAAW3C,EAAeE,GAC/E,IAAIsD,EAAMpD,EAAOI,WAAW,MAChB,IAAIkD,MAChBF,EAAI0B,UAAUxC,EAAGC,EAAG3C,EAAOE,GAE3BO,EAAK2C,MAAO,EACZ3C,EAAKW,UAAUhB,EAAQR,EAAAG,MAAMsB,KAC7BZ,EAAKa,aAAalB,EAAQR,EAAA2B,SAASF,IAAK,IAAK,KAC7CZ,EAAKe,WAAWpB,EAAQ,EAAG0E,EAAA7E,SAAU6E,EAAAhF,YAAa,IAClDW,EAAKe,WAAWpB,EAAQ0E,EAAAhF,YAAc,GAAIgF,EAAA7E,SAAU6E,EAAAhF,YAAa,IACjEW,EAAKe,WAAWpB,EAAQ,EAAG0E,EAAA7E,SAAW,IAAK6E,EAAAhF,YAAa,IACxDW,EAAKe,WAAWpB,EAAQ0E,EAAAhF,YAAc,GAAIgF,EAAA7E,SAAW,IAAK6E,EAAAhF,YAAa,IAEvEW,EAAKgB,OAAOqD,EAAAvE,QAASX,EAAA8B,WAAWC,QAASmD,EAAAhE,WAAYgE,EAAA7E,SAAW6E,EAAA3D,WAAY2D,EAAAhF,YAAagF,EAAA3D,WAAY,UACrGV,EAAKgB,OAAOqD,EAAAvE,QAASX,EAAA8B,WAAWE,QAAUkD,EAAAhE,WAAagE,EAAAhF,YAAc,GAAKgF,EAAA7E,SAAW6E,EAAA3D,WAAY2D,EAAAhF,YAAagF,EAAA3D,WAAY,UAC1HV,EAAKgB,OAAOqD,EAAAvE,QAASX,EAAA8B,WAAWG,QAASiD,EAAAhE,WAAYgE,EAAA7E,SAAW,GAAK,GAAI6E,EAAAhF,YAAagF,EAAA3D,WAAY,UAClGV,EAAKgB,OAAOqD,EAAAvE,QAASX,EAAA8B,WAAWI,QAAUgD,EAAAhE,WAAagE,EAAAhF,YAAc,GAAKgF,EAAA7E,SAAW,GAAK,GAAI6E,EAAAhF,YAAagF,EAAA3D,WAAY,UA9BhH3D,EAAA2H,IAAc,EACd3H,EAAA4H,IAAc,EAId5H,EAAA6H,aAAe,GAG1B7H,EAAA8H,OAAA,SAAuBF,EAAID,GAEvB,OAAOI,KAAKC,MAAMD,KAAKD,UAAYH,EAAMC,EAAM,IAAMA,GAwBzD5H,EAAAuE,YAAA,WACI+C,EAAA1E,OAAOyD,iBAAiB,YAAa,SAAU4B,GAC3C7F,EAAA6C,MAAMC,EAAI+C,EAAEC,MAAQvC,KAAKwC,WACzB/F,EAAA6C,MAAME,EAAI8C,EAAEG,MAAQzC,KAAK0C,UACzBzD,QAAQC,IAAKzC,EAAA6C,MAAMC,EAAI,IAAM9C,EAAA6C,MAAME,GAEpB,GADDoC,EAAAe,cAELlG,EAAA6C,MAAMC,EAAI,GAAO9C,EAAA6C,MAAMC,EAAIoC,EAAAhF,YAAc,GAAOF,EAAA6C,MAAME,EAAImC,EAAA7E,UAAcL,EAAA6C,MAAME,EAAImC,EAAA7E,SAAW,KAE9F6E,EAAA9D,OAAO+E,MAAM,GACbhB,EAAAiB,mBACAlB,EAAA9D,OAAOE,eAAe4D,EAAA9D,OAAOiF,kBAC7BhB,EAAUH,EAAA1E,OAAQ,EAAG0E,EAAA7E,SAAU6E,EAAAhF,YAAa,KAE3CF,EAAA6C,MAAMC,EAAIoC,EAAAhF,YAAc,IAAQF,EAAA6C,MAAMC,EAAI9C,EAAAG,MAAMC,MAAQ,GAAOJ,EAAA6C,MAAME,EAAImC,EAAA7E,UAAcL,EAAA6C,MAAME,EAAImC,EAAA7E,SAAW,KAE7G6E,EAAA9D,OAAO+E,MAAM,GACbhB,EAAAiB,mBACAlB,EAAA9D,OAAOE,eAAe4D,EAAA9D,OAAOiF,kBAC7BhB,EAAUH,EAAA1E,OAAQ,EAAG0E,EAAA7E,SAAU6E,EAAAhF,YAAa,KAE3CF,EAAA6C,MAAMC,EAAI,GAAO9C,EAAA6C,MAAMC,EAAIoC,EAAAhF,YAAc,GAAOF,EAAA6C,MAAME,EAAImC,EAAA7E,SAAW,KAASL,EAAA6C,MAAME,EAAI/C,EAAAG,MAAMG,OAAS,IAExG4E,EAAA9D,OAAO+E,MAAM,GACbhB,EAAAiB,mBACAlB,EAAA9D,OAAOE,eAAe4D,EAAA9D,OAAOiF,kBAC7BhB,EAAUH,EAAA1E,OAAQ,EAAG0E,EAAA7E,SAAU6E,EAAAhF,YAAa,KAE3CF,EAAA6C,MAAMC,EAAIoC,EAAAhF,YAAc,IAAQF,EAAA6C,MAAMC,EAAI9C,EAAAG,MAAMC,MAAQ,GAAOJ,EAAA6C,MAAME,EAAImC,EAAA7E,SAAW,KAASL,EAAA6C,MAAME,EAAI/C,EAAAG,MAAMG,OAAS,IAEvH4E,EAAA9D,OAAO+E,MAAM,GACbhB,EAAAiB,mBACAlB,EAAA9D,OAAOE,eAAe4D,EAAA9D,OAAOiF,kBAC7BhB,EAAUH,EAAA1E,OAAQ,EAAG0E,EAAA7E,SAAU6E,EAAAhF,YAAa,MAGpDiF,EAAAiB,qGClFR,IAAApG,EAAAtC,EAAA,GACAoC,EAAApC,EAAA,GACAwH,EAAAxH,EAAA,GAEWE,EAAA0I,gBAAkB7F,SAASC,eAAe,mBACrD9C,EAAA0I,gBAAgBvF,MAAMwD,KAAOvE,EAAAG,MAAMC,MAAQ,GAAK,KAChDxC,EAAA0I,gBAAgBvF,MAAME,UAAY,OAClCrD,EAAA0I,gBAAgB1D,UAAY,mBAEjB,IAAI9C,EAAAgB,aAAf,IACIyF,GAAc,EAElB3I,EAAAwI,iBAAA,WACIxI,EAAA0I,gBAAgB1D,UAAY,kBAAoBsC,EAAA9D,OAAOgE,YAAc,aAAeF,EAAA9D,OAAOqE,cACvFP,EAAA9D,OAAOgE,YAAc,GAAmB,GAAdF,EAAA9D,OAAOoF,OAQzC,WACItB,EAAAvE,QAAQwD,UAAY,cACpBe,EAAAvE,QAAQ2E,UAAU,EAAG,EAAGtF,EAAAG,MAAMC,MAAOJ,EAAAG,MAAMG,QAC3C4E,EAAAvE,QAAQyD,SAAS,EAAG,EAAGpE,EAAAG,MAAMC,MAAOJ,EAAAG,MAAMG,QAC1C,IAAI+D,EAAe,4BACnBa,EAAAvE,QAAQ6D,KAAO,eACfU,EAAAvE,QAAQwD,UAAY,QACpBe,EAAAvE,QAAQsE,SAASZ,EAAMrE,EAAAG,MAAMC,MAAM,EAAI8E,EAAAvE,QAAQoE,YAAYV,GAAMjE,MAAM,EAAGJ,EAAAG,MAAMG,OAAO,GAEvFiG,GAAc,EAhBVE,GACAjE,QAAQC,IAAI,qBAEG,GAAf8D,IACA3I,EAAA0I,gBAAgB1D,UAAY,iBAcpChF,EAAAsI,UAAA,WACI,OAAmB,GAAfK,kFClCR,IAAAG,EAAAhJ,EAAA,GASAqC,EAAArC,EAAA,GACAsC,EAAAtC,EAAA,GAEA2D,EAAA,oBAAAA,IACIkC,KAAApC,OAAmB,GACnBoC,KAAAoD,SAAmB,EACnBpD,KAAAqD,SAAmB,EACnBrD,KAAAkC,aAAuB,GACvBlC,KAAAsD,mBAA+B,GAC/BtD,KAAA8C,iBAA6B,GAC7B9C,KAAA6B,YAAsB,EACtB7B,KAAAuD,OAAoB,GACpBvD,KAAAwD,WAAuB,GACvBxD,KAAAiD,KAAgB,EA2HpB,OAzHInF,EAAA3B,UAAA4B,eAAA,SAAe0F,GACX,GAAgB,GAAZzD,KAAKiD,IAAc,CACnBhE,QAAQC,IAAI,sBAAwBc,KAAKiD,KACzC,IAAI1I,EAAI,EAEQmJ,MAAZD,IACAA,EAAWN,EAAAQ,eASfR,EAAAS,QAAQ5D,KAAKoD,UACb,IAAIS,EAAkBV,EAAAW,gBAAgBL,GAClC3C,EAAOqC,EAAAY,cAAcF,GACzB7D,KAAKuD,OAASJ,EAAAa,gBAAgBH,GAC9B7D,KAAKsD,mBAAqBH,EAAAc,sBAAsBJ,GAGhD,IAAIK,EAAQ1H,EAAA2F,OAAO,EAAG,GAMtB,IALA1F,EAAA8B,WAAWC,QAAUsC,EAAKoD,GAC1BlE,KAAKpC,OAAO,GAAKsG,EAEjBA,EAAQ1H,EAAA2F,OAAO,EAAG,GAClB1F,EAAA8B,WAAWE,QAAUqC,EAAKoD,GACnBzH,EAAA8B,WAAWE,SAAWhC,EAAA8B,WAAWC,SACpC0F,EAAQ1H,EAAA2F,OAAO,EAAG,GAClB1F,EAAA8B,WAAWE,QAAUqC,EAAKoD,GAM9B,IAJAlE,KAAKpC,OAAO,GAAKsG,EAEjBA,EAAQ1H,EAAA2F,OAAO,EAAG,GAClB1F,EAAA8B,WAAWG,QAAUoC,EAAKoD,GACnBzH,EAAA8B,WAAWG,SAAWjC,EAAA8B,WAAWC,SAAW/B,EAAA8B,WAAWG,SAAWjC,EAAA8B,WAAWE,SAEhFyF,EAAQ1H,EAAA2F,OAAO,EAAG,GAClB1F,EAAA8B,WAAWG,QAAUoC,EAAKoD,GAM9B,IAJAlE,KAAKpC,OAAO,GAAKsG,EAEjBA,EAAQ1H,EAAA2F,OAAO,EAAG,GAClB1F,EAAA8B,WAAWI,QAAUmC,EAAKoD,GACnBzH,EAAA8B,WAAWI,SAAWlC,EAAA8B,WAAWC,SAAW/B,EAAA8B,WAAWI,SAAWlC,EAAA8B,WAAWE,SAAWhC,EAAA8B,WAAWI,SAAWlC,EAAA8B,WAAWG,SAK5H,GAJAwF,EAAQ1H,EAAA2F,OAAO,EAAG,GAClB1F,EAAA8B,WAAWI,QAAUmC,EAAKoD,GAC1B3J,GAAK,EACL0E,QAAQC,IAAI,YAAc3E,GACtBA,EAAI,IAAM,CACV4J,MAAM,UACN,MAGR5J,EAAI,EACJyF,KAAKpC,OAAO,GAAKsG,EACjBjF,QAAQC,IAAI,OAASc,KAAKpC,UAKlCE,EAAA3B,UAAAyG,MAAA,SAAMwB,GACF,IAAIC,EAEuB,GAAvBrE,KAAKpC,OAAOwG,KAMZpE,KAAK6B,aAAe7B,KAAKuD,OAAO,GAChCJ,EAAAmB,gBAAgB,GAChBD,EAASlB,EAAAoB,kBAAkBvE,KAAKsD,mBAAmB,IACnDrE,QAAQC,IAAImF,GACZrE,KAAKkC,aAAeiB,EAAAqB,gBAAgBH,GACpCrE,KAAKoD,SAAWD,EAAAsB,YAAYJ,GAC5BrE,KAAK8C,iBAAmBK,EAAAuB,oBAAoBL,IAGrB,GAAvBrE,KAAKpC,OAAOwG,KACZpE,KAAK6B,aAAe7B,KAAKuD,OAAO,GAChCJ,EAAAmB,gBAAgB,GAChBD,EAASlB,EAAAoB,kBAAkBvE,KAAKsD,mBAAmB,IACnDrE,QAAQC,IAAImF,GACZrE,KAAKkC,aAAeiB,EAAAqB,gBAAgBH,GACpCrE,KAAKoD,SAAWD,EAAAsB,YAAYJ,GAC5BrE,KAAK8C,iBAAmBK,EAAAuB,oBAAoBL,IAErB,GAAvBrE,KAAKpC,OAAOwG,KAMZpE,KAAK6B,aAAe7B,KAAKuD,OAAO,GAChCJ,EAAAmB,gBAAgB,GAChBD,EAASlB,EAAAoB,kBAAkBvE,KAAKsD,mBAAmB,IACnDrE,QAAQC,IAAImF,GACZrE,KAAKkC,aAAeiB,EAAAqB,gBAAgBH,GACpCrE,KAAKoD,SAAWD,EAAAsB,YAAYJ,GAC5BrE,KAAK8C,iBAAmBK,EAAAuB,oBAAoBL,IAErB,GAAvBrE,KAAKpC,OAAOwG,KAMZpE,KAAK6B,aAAe7B,KAAKuD,OAAO,GAChCJ,EAAAmB,gBAAgB,GAChBD,EAASlB,EAAAoB,kBAAkBvE,KAAKsD,mBAAmB,IACnDrE,QAAQC,IAAImF,GACZrE,KAAKkC,aAAeiB,EAAAqB,gBAAgBH,GACpCrE,KAAKoD,SAAWD,EAAAsB,YAAYJ,GAC5BrE,KAAK8C,iBAAmBK,EAAAuB,oBAAoBL,IAGhDpF,QAAQC,IAAI,QAAUkF,EAAS,UAAYpE,KAAKkC,eAGxDpE,EArIA,GAAazD,EAAAyD,wFCZb,IAAAtB,EAAArC,EAAA,GACAwH,EAAAxH,EAAA,GAEIwK,EAAM,IAAI7F,eASdzE,EAAAuJ,QAAA,SAAwBgB,GACpB3F,QAAQC,IAAI,iBACA,KAAR0F,IACAD,EAAI5F,KAAK,MAAO,oBAAsB6F,EAAO,QAAQ,GACrDD,EAAI3F,OACJC,QAAQC,IAAI,eAAiB0F,IAGjC3F,QAAQC,IAAI,gBACZD,QAAQC,IAAI,MAIhB7E,EAAAyJ,gBAAA,SAAgCe,GAC5B5F,QAAQC,IAAI,yBAGZ,IAFA,IAAI4F,EAAUH,EAAIxF,YAAYC,qBAAqB,UAAU,GAAG2F,SAC5DC,EAAuB,GAClBzK,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAI0K,EAAI,EAAGA,EAAIH,EAAQzD,OAAQ4D,IAC5BC,OAAOJ,EAAQG,GAAGE,KAAON,EAAUtK,KACnCyK,EAAczK,GAAKuK,EAAQG,IAOvC,OAHAhG,QAAQC,IAAI8F,GACZ/F,QAAQC,IAAI,wBACZD,QAAQC,IAAI,KACL8F,GAIX3K,EAAA2J,gBAAA,SAAgCc,GAC5B7F,QAAQC,IAAI,yBAEZ,IADA,IAAIqE,EAAmB,GACdhJ,EAAI,EAAGA,EAAIuK,EAAQzD,OAAQ9G,IAChCgJ,EAAOhJ,GAAK2K,OAAOJ,EAAQvK,GAAG6E,qBAAqB,SAAS,GAAGC,WAKnE,OAHAJ,QAAQC,IAAI,cAAgBqE,GAC5BtE,QAAQC,IAAI,wBACZD,QAAQC,IAAI,KACLqE,GAGXlJ,EAAA0J,cAAA,SAA8Be,GAC1B7F,QAAQC,IAAI,uBAEZ,IADA,IAAIkG,EAAkB,GACb7K,EAAI,EAAGA,EAAIuK,EAAQzD,OAAQ9G,IAChC6K,EAAS7K,GAAKuK,EAAQvK,GAAG6E,qBAAqB,QAAQ,GAAGC,UAI7D,OAFAJ,QAAQC,IAAI,sBACZD,QAAQC,IAAI,KACLkG,GAIX/K,EAAA4J,sBAAA,SAAsCa,GAElC,IAAIO,EADJpG,QAAQC,IAAI,+BAGZ,IADA,IAAIoE,EAA+B,GAC1B/I,EAAI,EAAGA,EAAIuK,EAAQzD,OAAQ9G,IACsB,GAAlDuK,EAAQvK,GAAG6E,qBAAqB,QAAQiC,SAC4B,KAAhE6D,OAAOJ,EAAQvK,GAAG6E,qBAAqB,QAAQ,GAAGC,WAClDsC,EAAA9D,OAAO2F,WAAWjJ,GAAK2K,OAAOJ,EAAQvK,GAAG6E,qBAAqB,QAAQ,GAAGC,WAEzEsC,EAAA9D,OAAO2F,WAAWjJ,GAAK,MAG/B8K,EAAOP,EAAQvK,GAAG6E,qBAAqB,QAAQ,GAC/CkE,EAAmB/I,GAAK2K,OAAOG,EAAKN,SAASvI,EAAA2F,OAAO,EAAGkD,EAAKN,SAAS1D,OAAS,IAAIhC,WAKtF,OAHAJ,QAAQC,IAAI,MAAQoE,EAAqB,sBAAwB3B,EAAA9D,OAAO2F,YACxEvE,QAAQC,IAAI,8BACZD,QAAQC,IAAI,KACLoE,GAIXjJ,EAAAkK,kBAAA,SAAkCY,GAC9BlG,QAAQC,IAAI,2BAGZ,IAFA,IACIoG,EADAC,EAAkBZ,EAAIxF,YAAYC,qBAAqB,YAAY,GAAG2F,SAEjExK,EAAI,EAAGA,EAAIgL,EAAgBlE,OAAQ9G,IACpC2K,OAAOK,EAAgBhL,GAAG4K,KAAOA,IACjCG,EAAiBC,EAAgBhL,IAKzC,OAFA0E,QAAQC,IAAI,8BACZD,QAAQC,IAAI,KACLoG,GAGXjL,EAAAmK,gBAAA,SAAgCH,GAC5B,OAAOA,EAAOjF,qBAAqB,QAAQ,GAAGC,WAGlDhF,EAAAoK,YAAA,SAA4BJ,GACxB,IAAImB,EAYJ,OAXAvG,QAAQC,IAAI,qBAEoD,GAA5DgG,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGC,YAC9CmG,EAAW7D,EAAA9D,OAAOuF,SAAW,EAC7BnE,QAAQC,IAAI,MAAQsG,KAEpBA,EAAWN,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGC,WACzDJ,QAAQC,IAAI,MAAQsG,IAExBvG,QAAQC,IAAI,QAAUmF,EAAOjF,qBAAqB,QAAQ,GAAGC,WAEG,KAA5D6F,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGC,YAC9CJ,QAAQC,IAAI,kBACZyC,EAAA9D,OAAOoF,KAAM,EACN,OAEXhE,QAAQC,IAAI,oBACZD,QAAQC,IAAI,KACLsG,IAGXnL,EAAAqK,oBAAA,SAAoCL,GAChCpF,QAAQC,IAAI,6BACZ,IAAIuG,EAAiB,GACrB,GAAkB,GAAd9D,EAAA9D,OAAOoF,IACP,OAAO,KAMX,IAHAwC,EAAK,GAAKP,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,WAAW5C,EAAA2F,OAAO,EAAGkC,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,WAAWiC,OAAS,IAAIhC,WACtLoG,EAAK,GAAKP,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,iBAAiB5C,EAAA2F,OAAO,EAAGkC,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,iBAAiBiC,OAAS,IAAIhC,WAClMoG,EAAK,GAAKP,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,iBAAiB5C,EAAA2F,OAAO,EAAGkC,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,iBAAiBiC,OAAS,IAAIhC,WAC3LoG,EAAK,IAAMA,EAAK,IACnBA,EAAK,GAAKP,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,iBAAiB5C,EAAA2F,OAAO,EAAGkC,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,iBAAiBiC,OAAS,IAAIhC,WAWtM,OATAoG,EAAK,GAAKP,OAAOb,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,YAAY5C,EAAA2F,OAAO,EAAGkC,EAAOjF,qBAAqB,QAAQ,GAAGA,qBAAqB,YAAYiC,OAAS,IAAIhC,WACxLJ,QAAQC,IAAI,YAAcuG,GAC1BxG,QAAQC,IAAI,4BACZD,QAAQC,IAAI,KACZD,QAAQC,IAAI,KACZD,QAAQC,IAAI,KACZD,QAAQC,IAAI,KACZD,QAAQC,IAAI,KACZD,QAAQC,IAAI,KACLuG,GAGXpL,EAAAsJ,YAAA,WACI1E,QAAQC,IAAI,qBACZyF,EAAI5F,KAAK,MAAO,0BAA0B,GAC1C4F,EAAI3F,OAMJ,IALA,IAAIyG,EAAgB,GAEhBX,EAAUH,EAAIxF,YAAYC,qBAAqB,UAAU,GAAGA,qBAAqB,UACjFiF,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,IAC5CqE,EAAOrB,EAAOjF,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC/C,WAARD,GAEHA,GADArB,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,KAC9BjC,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC1DF,EAAK,GAAKP,OAAOb,EAAOc,IAG5B,IADAM,EAAK,GAAKP,OAAOb,EAAOc,IACT,iBAARO,GAEHA,GADArB,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,KAC9BjC,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC1DF,EAAK,GAAKP,OAAOb,EAAOc,IAE5BM,EAAK,GAAKP,OAAOb,EAAOc,IAGxBO,GADArB,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,KAC9BjC,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC1D1G,QAAQC,IAAK,QAAUwG,EAAO,KAAe,iBAARA,GAA2BD,EAAK,IAAMA,EAAK,KAEhF,IADA,IAAIxF,GAAO,EACI,GAARA,GAEHyF,GADArB,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,KAC9BjC,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC1DF,EAAK,GAAKP,OAAOb,EAAOc,IACxBlG,QAAQC,IAAI,MAAQuG,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMC,EAAO,KAAe,iBAARA,GAA2BD,EAAK,IAAMA,EAAK,KAChG,iBAARC,GAA6BD,EAAK,IAAMA,EAAK,KAC9CxF,GAAO,GAMf,IADAyF,GADArB,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,KAC9BjC,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC3C,YAARD,GAEHA,GADArB,EAASS,EAAQtI,EAAA2F,OAAO,EAAG2C,EAAQzD,OAAS,KAC9BjC,qBAAqB,QAAQ,GAAG2F,SAAS,GAAGY,QAC1DF,EAAK,GAAKP,OAAOb,EAAOc,IAM5B,OAJAM,EAAK,GAAKP,OAAOb,EAAOc,IACxBlG,QAAQC,IAAIuG,GACZxG,QAAQC,IAAI,mBACZD,QAAQC,IAAI,KACLuG,GAIXpL,EAAAiK,gBAAA,SAAgCa,GAC5BlG,QAAQC,IAAI,yBACiB,MAAzByC,EAAA9D,OAAO2F,WAAW2B,IACW,GAAzBxD,EAAA9D,OAAO2F,WAAW2B,KAClBR,EAAI5F,KAAK,MAAO,oBAAsB4C,EAAA9D,OAAO2F,WAAW2B,GAAM,QAAQ,GACtER,EAAI3F,OACJ2C,EAAA9D,OAAOuF,SAAWzB,EAAA9D,OAAO2F,WAAW2B,IAG5ClG,QAAQC,IAAI,sBAAwByC,EAAA9D,OAAO2F,WAAW2B,IACtDlG,QAAQC,IAAI,wBACZD,QAAQC,IAAI","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {DrawElements} from \"./DRAW_ELEMENTS\";\r\nimport {mouseCanvas, random} from \"./functions\";\r\nimport {board, customer, buttonText} from \"./gameObject\";\r\nimport {checkGameProcess} from \"./CHARACTER_WINDOW\";\r\nimport {Dialog} from \"./DIALOG\";\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\nexport let widthButton = board.width/2 - 10;\r\nexport let yButton1 = board.height - 200 + 5;\r\nexport let yButton2 = board.height - 60 + 5;\r\n\r\nexport let canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"gameboard\");\r\nexport let context = canvas.getContext(\"2d\");\r\nlet Draw = new DrawElements();\r\n\r\ncanvas.height = board.height;\r\ncanvas.width = board.width;\r\ncanvas.style.position = \"absolute\";\r\ncanvas.style.marginTop = '10px';\r\ncanvas.style.marginLeft = \"auto\";\r\n\r\n// rightPosition();\r\nexport let answer: number[] = [];\r\n\r\n// answer = fillTextButton(0);\r\nexport let dialog = new Dialog();\r\ndialog.fillTextButton();\r\n\r\nexport let lineHeight = 20;    //межстрочный интервал\r\n/*если мы знаем высоту текста, то мы можем\r\nпредположить, что высота строки должна быть именно такой*/\r\nexport let marginLeft = 5;    //отступ слева\r\nexport let marginTop = 40;\r\n\r\n// var req = (function () {\r\n//     return  requestAnimationFrame   ||\r\n//         webkitRequestAnimationFrame ||\r\n//         function(callback){\r\n//             setTimeout(callback, 1000/60);\r\n//         };\r\n// })();\r\n// var outlog = function () {\r\n//     req(outlog);\r\n// };\r\n//\r\n// outlog();\r\n\r\nDraw.drawBoard(canvas, board.url);\r\nDraw.drawCustomer(canvas, customer.url, 250, 300);\r\nDraw.drawButton(canvas, 5, yButton1, widthButton, 90);\r\nDraw.drawButton(canvas, 5, yButton1 + 100, widthButton, 90);\r\nDraw.drawButton(canvas, widthButton + 15, yButton1, widthButton, 90);\r\nDraw.drawButton(canvas, widthButton + 15, yButton1 + 100, widthButton, 90);\r\n\r\n// Draw.textIn(context, buttonText.button1, marginLeft, yButton1 + lineHeight, widthButton, lineHeight,\"center\");\r\n// Draw.textIn(context, buttonText.button2, (marginLeft + widthButton + 15), yButton1 + lineHeight, widthButton, lineHeight,\"center\");\r\n// Draw.textIn(context, buttonText.button3, marginLeft, yButton1 + 90 + 25, widthButton, lineHeight,\"center\");\r\n// Draw.textIn(context, buttonText.button4, (marginLeft + widthButton + 15), yButton1 + 90 + 25, widthButton, lineHeight,\"center\");\r\nDraw.textIn(context, buttonText.button1, marginLeft, yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\nDraw.textIn(context, buttonText.button2, (marginLeft + widthButton + 15), yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\nDraw.textIn(context, buttonText.button3, marginLeft, yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\nDraw.textIn(context, buttonText.button4, (marginLeft + widthButton + 15), yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\nmouseCanvas();\r\n\r\n\r\nlet xmlTest = new XMLHttpRequest();\r\nxmlTest.open(\"GET\", './.xml', false);\r\nxmlTest.open(\"GET\", './DialogList/step' + 3 + '.xml', false);\r\nxmlTest.send();\r\nconsole.log(\"START \" + xmlTest.responseXML.getElementsByTagName(\"seller\")[0].getElementsByTagName(\"phrase\")[1].getElementsByTagName(\"step\")[0].innerHTML);\r\n//\r\n// aaa = xmlTest.responseXML.getElementsByTagName(\"phrase\");\r\n// console.log(\"aaa \" + aaa[5].children[0].innerHTML);","export let board = {\r\n    width: 1080,\r\n    height: 720,\r\n    url: './src/back.jpg'\r\n};\r\n\r\nexport let customer = {\r\n    width: 250,\r\n    height: 340,\r\n    url: './src/customer.png'\r\n};\r\nexport let mouse = {\r\n    x:0,\r\n    y:0\r\n};\r\nexport let buttonText = {\r\n    button1: null,\r\n    button2: null,\r\n    button3: null,\r\n    button4: null,\r\n};\r\n\r\nexport let ask = {\r\n    specific: [],\r\n    statisfactory: [],\r\n    negative: []\r\n};\r\n\r\nexport let answerAsk = {\r\n    positiv: [],\r\n    statisfactory: [],\r\n    negative: []\r\n};\r\n\r\nexport let answerStat = {\r\n    positiv: [],\r\n    statisfactory: [],\r\n    negative: []\r\n};","export class DrawElements {\r\n    flag: boolean = true;\r\n\r\n    drawBoard(canvas: HTMLCanvasElement, pict: string, w?: number, h?: number): void {\r\n        let ctx = canvas.getContext('2d');\r\n        let image = new Image();\r\n        image.src = pict;\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n                ctx.fillStyle = \"rgba(0,0,0,0.7)\";\r\n                ctx.fillRect(0, (canvas.height - 200), canvas.width, 200);\r\n            })\r\n        } else {\r\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n            ctx.fillStyle = \"rgba(0,0,0,0.7)\";\r\n            ctx.fillRect(0, (canvas.height - 200), canvas.width, 200);\r\n        }\r\n    }\r\n\r\n    drawCustomer(canvas: HTMLCanvasElement, pict: string, w?: number, h?: number): void {\r\n        let ctx = canvas.getContext('2d');\r\n        let image = new Image();\r\n        image.src = pict;\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                ctx.drawImage(image, (canvas.width - w), (canvas.height - h - 200), w, h);\r\n            })\r\n        } else {\r\n            ctx.drawImage(image, (canvas.width - w), (canvas.height - h - 200), w, h);\r\n        }\r\n    }\r\n\r\n    drawButton(canvas: HTMLCanvasElement, x: number, y: number, width: number, height: number): void {\r\n        let ctx = canvas.getContext('2d');\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n                ctx.fillRect(x, y, width, height);\r\n            })\r\n        } else {\r\n            ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    // createButton(id: string, width:number, height: number): HTMLCanvasElement{\r\n    //     let button = document.createElement(\"canvas\");\r\n    //     button.id = id;\r\n    //     button.style.position = \"absolute\";\r\n    //     button.style.width = width + 'px';\r\n    //     button.style.height = height + 'px';\r\n    //     button.style.backgroundColor = \"rgba(255,255,255,0.5)\";\r\n    //     document.body.appendChild(button);\r\n    //\r\n    //     return <HTMLCanvasElement>document.getElementById(id);\r\n    // }\r\n    // textIn(context, text, marginLeft, marginTop, maxWidth, lineHeight, position ?: string) {\r\n    //     context.font = \"16pt Calibri\";\r\n    //     let left = marginLeft + 5;    //Отступ от левой границы элемента\r\n    //     // maxWidth = maxWidth;\r\n    //     var words = text.split(\" \");\r\n    //     console.log('words ' + words);\r\n    //     var countWords = words.length;\r\n    //     console.log('countWords ' + countWords);\r\n    //     var line = \"\";\r\n    //\r\n    //     for (var n = 0; n < countWords; n++) {\r\n    //         var testLine = line + words[n] + \" \";\r\n    //         var testWidth = context.measureText(testLine).width;    //Получаем ширину текста на данной итерации\r\n    //\r\n    //         //Если длина строки больше ширины объекта\r\n    //         if (testWidth > maxWidth) {\r\n    //             marginLeft = left + (maxWidth - context.measureText(line).width) / 2;\r\n    //             if (this.flag == true) {\r\n    //                     context.font = \"16pt Calibri\";\r\n    //                     context.fillStyle = \"Black\";\r\n    //                     context.fillText(line, marginLeft, marginTop);\r\n    //                     console.log('line ' + line);\r\n    //             }\r\n    //             else {\r\n    //                     context.font = \"16pt Calibri\";\r\n    //                     context.fillStyle = \"Black\";\r\n    //                     context.fillText(line, marginLeft, marginTop);\r\n    //             }\r\n    //\r\n    //\r\n    //             line = words[n] + \" \";\r\n    //             marginTop += lineHeight;\r\n    //         }\r\n    //         else {\r\n    //             console.log(\"line \" + line);\r\n    //             line = testLine;\r\n    //         }\r\n    //     }\r\n    //     if (position == \"center\") {\r\n    //         maxWidth = maxWidth / 2 - context.measureText(line).width / 2;\r\n    //         marginLeft = left + maxWidth;\r\n    //         // console.log(context.measureText(line));\r\n    //     }\r\n    //     //Если текст рисуется впервые\r\n    //     if (this.flag == true) {\r\n    //         //Загружаем\r\n    //         window.addEventListener('load', function () {\r\n    //             context.fillStyle = \"Black\";\r\n    //             context.fillText(line, marginLeft, marginTop);\r\n    //         })\r\n    //     }\r\n    //     else {\r\n    //         context.font = \"16pt Calibri\";\r\n    //         context.fillStyle = \"Black\";\r\n    //         context.fillText(line, marginLeft, marginTop);\r\n    //     }\r\n    // }\r\n\r\n    textIn(context, text, marginLeft, marginTop, maxWidth, lineHeight, position ?: string) {\r\n        let left = marginLeft + 5;    //Отступ от левой границы элемента\r\n\r\n        //Если рисуем текст впервые\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                context.font = \"16pt Calibri\"\r\n                var words = text.split(\" \");\r\n                var countWords = words.length;\r\n                var line = \"\";\r\n                for (var n = 0; n < countWords; n++) {\r\n                    var testLine = line + words[n] + \" \";\r\n                    var testWidth = context.measureText(testLine).width;\r\n                    if (testWidth > maxWidth) {\r\n                        if (position == \"center\") {\r\n                            let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                            marginLeft = left + centr;\r\n                        }\r\n                        context.fillStyle = \"Black\";\r\n                        context.fillText(line, marginLeft, marginTop);\r\n                        line = words[n] + \" \";\r\n                        marginTop += lineHeight;\r\n                    }\r\n                    else {\r\n                        line = testLine;\r\n                    }\r\n                }\r\n                if (position == \"center\") {\r\n                    let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                    marginLeft = left + centr;\r\n                }\r\n                context.fillStyle = \"Black\";\r\n                context.fillText(line, marginLeft, marginTop);\r\n            })\r\n        }\r\n        else{\r\n            context.font = \"16pt Calibri\"\r\n            var words = text.split(\" \");\r\n            var countWords = words.length;\r\n            var line = \"\";\r\n            for (var n = 0; n < countWords; n++) {\r\n                var testLine = line + words[n] + \" \";\r\n                var testWidth = context.measureText(testLine).width;\r\n                if (testWidth > maxWidth) {\r\n                    if (position == \"center\") {\r\n                        let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                        marginLeft = left + centr;\r\n                    }\r\n                    context.fillStyle = \"Black\";\r\n                    context.fillText(line, marginLeft, marginTop);\r\n                    line = words[n] + \" \";\r\n                    marginTop += lineHeight;\r\n                }\r\n                else {\r\n                    line = testLine;\r\n                }\r\n            }\r\n            if (position == \"center\") {\r\n                let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                marginLeft = left + centr;\r\n            }\r\n            context.fillStyle = \"Black\";\r\n            context.fillText(line, marginLeft, marginTop);\r\n        }\r\n    }\r\n}","\r\nimport {board, customer, buttonText, mouse} from \"./gameObject\";\r\nimport {DrawElements} from \"./DRAW_ELEMENTS\";\r\nimport {canvas, context, widthButton, yButton1, marginLeft, marginTop, lineHeight, answer, dialog} from \"./game\";\r\nimport {checkGameProcess, endOfGame} from \"./CHARACTER_WINDOW\";\r\n\r\nlet countIndex = 0;     //Счётчик индекса, который позваляет отпределить уникальный ответ для 4 кнопки\r\nexport let countPlayer = 0;    //Количество очков у игрока\r\nlet answerButton: number[] = [0, 0, 0, 0, 0];   //хранит значение очков за ответ. [0] - всегда пустой, [1] - первая кнопка, [2] - вторая кнопка ...\r\n\r\nlet Draw = new DrawElements();\r\n\r\nexport let max: number = 1;    //Максимальное значенние рандомного числа, используемового для получения случайного ответа\r\nexport let min: number = 0;\r\n\r\nexport let typeAnswer: string;\r\nexport let answerCustomer: string;\r\nexport let textCustomer = \"\";\r\nexport let linkNextAnswerCustomer;\r\n\r\nexport function random(min,max): number\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n//Перерисовывает элеенты после выбора ответа\r\nfunction redrawing(canvas: HTMLCanvasElement, x: number, y: number, width: number, height: number): void {\r\n    let ctx = canvas.getContext('2d');\r\n    let image = new Image();\r\n    ctx.clearRect(x, y, width, height);\r\n\r\n    Draw.flag = false;\r\n    Draw.drawBoard(canvas, board.url);\r\n    Draw.drawCustomer(canvas, customer.url, 250, 300);\r\n    Draw.drawButton(canvas, 5, yButton1, widthButton, 90);\r\n    Draw.drawButton(canvas, widthButton + 15, yButton1, widthButton, 90);\r\n    Draw.drawButton(canvas, 5, yButton1 + 100, widthButton, 90);\r\n    Draw.drawButton(canvas, widthButton + 15, yButton1 + 100, widthButton, 90);\r\n\r\n    Draw.textIn(context, buttonText.button1, marginLeft, yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\n    Draw.textIn(context, buttonText.button2, (marginLeft + widthButton + 15), yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\n    Draw.textIn(context, buttonText.button3, marginLeft, yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\n    Draw.textIn(context, buttonText.button4, (marginLeft + widthButton + 15), yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\n}\r\n\r\n//Реакция на щелчок мышки по окну игры\r\nexport function mouseCanvas() {\r\n    canvas.addEventListener(\"mousedown\", function (e) {\r\n        mouse.x = e.pageX - this.offsetLeft;\r\n        mouse.y = e.pageY - this.offsetTop;\r\n        console.log( mouse.x + ' ' + mouse.y);\r\n        let endGame = endOfGame();\r\n        if (endGame == false) {\r\n            if ((mouse.x > 5) && (mouse.x < widthButton + 5) && (mouse.y > yButton1) && (mouse.y < yButton1 + 90)) {\r\n                // console.log('0 0 true');\r\n                dialog.check(0);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n            if ((mouse.x > widthButton + 15) && (mouse.x < board.width - 5) && (mouse.y > yButton1) && (mouse.y < yButton1 + 90)) {\r\n                // console.log('0 1 true')\r\n                dialog.check(1);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n            if ((mouse.x > 5) && (mouse.x < widthButton + 5) && (mouse.y > yButton1 + 105) && (mouse.y < board.height - 5)) {\r\n                // console.log('1 0 true');\r\n                dialog.check(2);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n            if ((mouse.x > widthButton + 15) && (mouse.x < board.width - 5) && (mouse.y > yButton1 + 105) && (mouse.y < board.height - 5)) {\r\n                // console.log('1 1 true')\r\n                dialog.check(3);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n        }\r\n        checkGameProcess();\r\n    })\r\n\r\n}\r\n","import {board} from \"./gameObject\";\r\nimport {DrawElements} from \"./DRAW_ELEMENTS\";\r\nimport {canvas, context, dialog} from \"./game\";\r\n\r\nexport let characterWindow = document.getElementById(\"characterWindow\");\r\ncharacterWindow.style.left = board.width + 30 + \"px\";\r\ncharacterWindow.style.marginTop = \"10px\";\r\ncharacterWindow.innerHTML = 'Счёт игрока:   0';\r\n\r\nlet Draw = new DrawElements();\r\nlet endGameFlag = false;\r\n\r\nexport function checkGameProcess(): void {\r\n    characterWindow.innerHTML = 'Счёт игрока:   ' + dialog.countPlayer + \"<br/><br/>\" + dialog.textCustomer;\r\n    if (dialog.countPlayer < 0 || dialog.end == true){\r\n        gameOver();\r\n        console.log(\"       GAME OVER\");\r\n    }\r\n    if (endGameFlag == true){\r\n        characterWindow.innerHTML = 'Счёт игрока:';\r\n    }\r\n}\r\nfunction gameOver(): void {\r\n    context.fillStyle = \"rgba(0,0,0)\";\r\n    context.clearRect(0, 0, board.width, board.height);\r\n    context.fillRect(0, 0, board.width, board.height);\r\n    let text: string = 'Клиент ушёл, вы проиграли';\r\n    context.font = \"32pt Calibri\";\r\n    context.fillStyle = 'white';\r\n    context.fillText(text, board.width/2 - context.measureText(text).width/2, board.height/2);\r\n\r\n    endGameFlag = true;\r\n}\r\nexport function endOfGame() {\r\n    if (endGameFlag == true){\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}","import {\r\n    checkStepPhrase,\r\n    firstRandom,\r\n    getAnswerCustomer,getLinkAnswerCustomer, getLinkAnswerSeller,\r\n    getNextStep,\r\n    getPhraseSeller, getPointsPhrase,\r\n    getStep, getTextCustomer,\r\n    getTextSeller\r\n} from \"./text\";\r\nimport {answerCustomer, countPlayer, linkNextAnswerCustomer, random} from \"./functions\";\r\nimport {buttonText} from \"./gameObject\";\r\n\r\nexport class Dialog{\r\n    answer: number[] = [];\r\n    gameStep: number = 1;       //Указатель на номер дивлога\r\n    linkStep: number = 1;\r\n    textCustomer: string = \"\";  //Ответ покупателя\r\n    linkAnswerCustomer: number[] = [];   //Ссылка на возможные ответы покупателя\r\n    linkAnswerSeller: number[] = [];\r\n    countPlayer: number = 0;    //Счётчик очков игрока\r\n    points : number[] = [];\r\n    transition: number[] = [];\r\n    end : boolean = false;\r\n\r\n    fillTextButton(idPhrase ?: number[]) {\r\n        if (this.end == false) {\r\n            console.log(\"       this.end    \" + this.end);\r\n            let i = 0;\r\n            //Если функция вызвана впервые, то idPhrase неизвестно => генерируем первые фразы вручную\r\n            if (idPhrase == undefined) {\r\n                idPhrase = firstRandom()\r\n            }\r\n\r\n            // let answer: number[] = [];\r\n            // let id = getIdSeller(this.gameStep, idPhrase); //храним массив id фраз, которые будем выводить\r\n            // let text = getTextSeller(id);   //Получаем вопросы продавца\r\n            // this.linkAnswerCustomer = getNextStep(id);\r\n            // console.log('linkAnswerCustomer ' + this.linkAnswerCustomer);\r\n\r\n            getStep(this.gameStep);\r\n            let idPhrasesSeller = getPhraseSeller(idPhrase);\r\n            let text = getTextSeller(idPhrasesSeller);\r\n            this.points = getPointsPhrase(idPhrasesSeller);\r\n            this.linkAnswerCustomer = getLinkAnswerCustomer(idPhrasesSeller);\r\n\r\n            //Случайным образом выводим текст вопроса на кнопки\r\n            let index = random(0, 3);\r\n            buttonText.button1 = text[index];\r\n            this.answer[0] = index;\r\n\r\n            index = random(0, 3);\r\n            buttonText.button2 = text[index];\r\n            while (buttonText.button2 == buttonText.button1) {\r\n                index = random(0, 3);\r\n                buttonText.button2 = text[index];\r\n            }\r\n            this.answer[1] = index;\r\n\r\n            index = random(0, 3);\r\n            buttonText.button3 = text[index];\r\n            while (buttonText.button3 == buttonText.button1 || buttonText.button3 == buttonText.button2) {\r\n\r\n                index = random(0, 3);\r\n                buttonText.button3 = text[index];\r\n            }\r\n            this.answer[2] = index;\r\n\r\n            index = random(0, 3);\r\n            buttonText.button4 = text[index];\r\n            while (buttonText.button4 == buttonText.button1 || buttonText.button4 == buttonText.button2 || buttonText.button4 == buttonText.button3) {\r\n                index = random(0, 3);\r\n                buttonText.button4 = text[index];\r\n                i += 1;\r\n                console.log(\"       i \" + i);\r\n                if (i > 5000) {\r\n                    alert(\"Ошибка\");\r\n                    break\r\n                }\r\n            }\r\n            i = 0;\r\n            this.answer[3] = index;\r\n            console.log('+++ ' + this.answer);\r\n            // return answer;  //Массив, в котором индекс - кнопка, а значение - корректность ответа\r\n        }\r\n    }\r\n\r\n    check(button: number): void {\r\n        let phrase;\r\n        //Правильный ответ\r\n        if (this.answer[button] == 0){\r\n            // this.countPlayer += 2;   //увеличиваем счёт игрока\r\n            // this.textCustomer = getAnswerCustomer(this.gameStep, \"correct\", this.linkAnswerCustomer[0]);\r\n            //\r\n            // this.linkAnswerSeller = getIdAnswerSeller(this.gameStep, \"correct\", this.linkAnswerCustomer[0]);\r\n            // this.gameStep +=1;\r\n            this.countPlayer += this.points[0];\r\n            checkStepPhrase(0);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[0]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n        //Удовлетвворительный ответ\r\n        if (this.answer[button] == 1){\r\n            this.countPlayer += this.points[1];\r\n            checkStepPhrase(1);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[1]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n        if (this.answer[button] == 2){\r\n            // this.countPlayer += 1;\r\n            // this.textCustomer = getAnswerCustomer(this.gameStep, \"statisfactory\", this.linkAnswerCustomer[2]);\r\n            //\r\n            // this.linkAnswerSeller = getIdAnswerSeller(this.gameStep, \"statisfactory\", this.linkAnswerCustomer[2]);\r\n            // this.gameStep +=1;\r\n            this.countPlayer += this.points[2];\r\n            checkStepPhrase(2);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[2]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n        if (this.answer[button] == 3){\r\n            // this.countPlayer += -1;\r\n            // this.textCustomer = getAnswerCustomer(this.gameStep, \"negative\", this.linkAnswerCustomer[3]);\r\n            //\r\n            // this.linkAnswerSeller = getIdAnswerSeller(this.gameStep, \"negative\", this.linkAnswerCustomer[3]);\r\n            // this.gameStep +=1;\r\n            this.countPlayer += this.points[3];\r\n            checkStepPhrase(3);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[3]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n\r\n        console.log('==== ' + button + ' ===== ' + this.textCustomer);\r\n    }\r\n\r\n}","import {random} from \"./functions\";\r\nimport {dialog} from \"./game\";\r\n\r\nlet xml = new XMLHttpRequest();\r\n// xml.open(\"GET\", './dialog.xml', false);\r\n// xml.send();\r\n// let count = xml.responseXML.getElementsByTagName(\"seller\")[0].childElementCount;\r\n// console.log('count ' + count);\r\nlet sellerText: string;\r\nlet customerText: string;\r\n\r\n\r\nexport function getStep(step: number){\r\n    console.log('getStep start');\r\n    if (step != 100) {\r\n        xml.open(\"GET\", './DialogList/step' + step + '.xml', false);\r\n        xml.send();\r\n        console.log('   gameStep ' + step);\r\n    }\r\n\r\n    console.log('getStep end ');\r\n    console.log(' ');\r\n}\r\n\r\n//Возвращает фразы с заданным ID\r\nexport function getPhraseSeller(idPhrases : number[]) {\r\n    console.log('getPhraseSeller start');\r\n    let phrases = xml.responseXML.getElementsByTagName(\"seller\")[0].children; //Получаем все фразы соответствующего типа на заданном шаге\r\n    let phrasesResult: any[] = [];\r\n    for (let i = 0; i < 4; i++){\r\n        for (let j = 0; j < phrases.length; j++){\r\n            if (Number(phrases[j].id) == idPhrases[i]){\r\n                phrasesResult[i] = phrases[j];\r\n            }\r\n        }\r\n    }\r\n    console.log(phrasesResult);\r\n    console.log('getPhraseSeller end ');\r\n    console.log(' ');\r\n    return phrasesResult;\r\n}\r\n\r\n//Возвращает количество очков за фразу\r\nexport function getPointsPhrase(phrases: HTMLElement[]): number[]{\r\n    console.log('getPointsPhrase start');\r\n    let points: number[] = [];\r\n    for (let i = 0; i < phrases.length; i ++){\r\n        points[i] = Number(phrases[i].getElementsByTagName(\"point\")[0].innerHTML);    //Выводим количество очков за фразу\r\n    }\r\n    console.log('   points: ' + points);\r\n    console.log('getPointsPhrase end ');\r\n    console.log(' ');\r\n    return points;\r\n}\r\n\r\nexport function getTextSeller(phrases: HTMLElement[]){\r\n    console.log('getTextSeller start');\r\n    let question: any[] = [];\r\n    for (let i = 0; i < phrases.length; i ++){\r\n        question[i] = phrases[i].getElementsByTagName(\"text\")[0].innerHTML;    //Выводим текст вопроса\r\n    }\r\n    console.log('getTextSeller end ');\r\n    console.log(' ');\r\n    return question;\r\n}\r\n\r\n//Возвращает ID ответа покупателя\r\nexport function getLinkAnswerCustomer(phrases: HTMLElement[]){\r\n    console.log('getLinkAnswerCustomer start');\r\n    let next;\r\n    let linkAnswerCustomer: number[] = [];\r\n    for (let i = 0; i < phrases.length; i ++){\r\n        if (phrases[i].getElementsByTagName(\"step\").length != 0) {\r\n            if (Number(phrases[i].getElementsByTagName(\"step\")[0].innerHTML) != 100) {\r\n                dialog.transition[i] = Number(phrases[i].getElementsByTagName(\"step\")[0].innerHTML);\r\n            } else {\r\n                dialog.transition[i] = null;\r\n            }\r\n        }\r\n        next = phrases[i].getElementsByTagName(\"next\")[0];\r\n        linkAnswerCustomer[i] = Number(next.children[random(0, next.children.length - 1)].innerHTML);\r\n    }\r\n    console.log('   ' + linkAnswerCustomer + \" dialog.transition \" + dialog.transition);\r\n    console.log('getLinkAnswerCustomer end ');\r\n    console.log(' ');\r\n    return linkAnswerCustomer\r\n}\r\n\r\n//Возвращает фразу покупателя\r\nexport function getAnswerCustomer(id: number){\r\n    console.log('getAnswerCustomer start');\r\n    let phrasesCustomer = xml.responseXML.getElementsByTagName(\"customer\")[0].children;\r\n    let phraseCustomer;\r\n    for (let i = 0; i < phrasesCustomer.length; i++){\r\n        if (Number(phrasesCustomer[i].id) == id){\r\n            phraseCustomer = phrasesCustomer[i];\r\n        }\r\n    }\r\n    console.log('getLinkAnswerCustomer end ');\r\n    console.log(' ');\r\n    return phraseCustomer;\r\n}\r\n\r\nexport function getTextCustomer(phrase: HTMLElement){\r\n    return phrase.getElementsByTagName(\"text\")[0].innerHTML;\r\n}\r\n\r\nexport function getNextStep(phrase: HTMLElement){\r\n    let nextStep: number;\r\n    console.log('getNextStep start');\r\n    //Если ссылка на страницу диалога не задана, то переходим к следующей странице\r\n    if (Number(phrase.getElementsByTagName(\"step\")[0].innerHTML) == 0){\r\n        nextStep = dialog.gameStep + 1;\r\n        console.log('   ' + nextStep);\r\n    }else{\r\n        nextStep = Number(phrase.getElementsByTagName(\"step\")[0].innerHTML);\r\n        console.log('   ' + nextStep);\r\n    }\r\n    console.log(\"STEP \" + phrase.getElementsByTagName(\"step\")[0].innerHTML);\r\n    //Если ссылка на окно диалога = 100, то конец игры\r\n    if (Number(phrase.getElementsByTagName(\"step\")[0].innerHTML) == 100){\r\n        console.log(\"           end\");\r\n        dialog.end = true;\r\n        return null;\r\n    }\r\n    console.log('getNextStep end ');\r\n    console.log(' ');\r\n    return nextStep;\r\n}\r\n\r\nexport function getLinkAnswerSeller(phrase: HTMLElement){\r\n    console.log('getLinkAnswerSeller start');\r\n    let link: number[] = [];\r\n    if (dialog.end == true){\r\n        return null\r\n    }\r\n\r\n    link[0] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"correct\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"correct\").length - 1)].innerHTML);\r\n    link[1] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\").length - 1)].innerHTML);\r\n    link[2] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\").length - 1)].innerHTML);\r\n    while (link[2] == link[1]){\r\n        link[2] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\").length - 1)].innerHTML);\r\n    }\r\n    link[3] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"negative\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"negative\").length - 1)].innerHTML);\r\n    console.log('   link: ' + link);\r\n    console.log('getLinkAnswerSeller end ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    return link;\r\n}\r\n\r\nexport function firstRandom(){\r\n    console.log('firstRandom start');\r\n    xml.open(\"GET\", './DialogList/step1.xml', false);\r\n    xml.send();\r\n    let link:number[] = [];\r\n\r\n    let phrases = xml.responseXML.getElementsByTagName(\"seller\")[0].getElementsByTagName(\"phrase\");\r\n    let phrase = phrases[random(0, phrases.length - 1)];\r\n    let type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n    while (type != \"correct\"){\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[0] = Number(phrase.id);\r\n    }\r\n    link[0] = Number(phrase.id);\r\n    while (type != \"statisfaction\"){\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[1] = Number(phrase.id)\r\n    }\r\n    link[1] = Number(phrase.id);\r\n\r\n    phrase = phrases[random(0, phrases.length - 1)];\r\n    type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n    console.log (\"type \" + type + \" \" + (type != \"statisfaction\" && link[1] == link[2]));\r\n    let flag = true;\r\n    while (flag == true) {\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[2] = Number(phrase.id);\r\n        console.log(\"ss \" + link[1] + ' ' + link[2] + ' ' + type + ' ' + (type != \"statisfaction\" && link[1] == link[2]));\r\n        if ((type == \"statisfaction\") && (link[1] != link[2])){\r\n            flag = false;\r\n        }\r\n    }\r\n\r\n    phrase = phrases[random(0, phrases.length - 1)];\r\n    type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n    while (type != \"negative\"){\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[3] = Number(phrase.id);\r\n    }\r\n    link[3] = Number(phrase.id);\r\n    console.log(link);\r\n    console.log('firstRandom end');\r\n    console.log(' ');\r\n    return link;\r\n}\r\n\r\n//Ссылается на номер диалога, если в фразе продавца задана ссылка\r\nexport function checkStepPhrase(id: number){\r\n    console.log('checkStepPhrase start');\r\n    if (dialog.transition[id] != null){\r\n        if (dialog.transition[id] != 0) {\r\n            xml.open(\"GET\", './DialogList/step' + dialog.transition[id] + '.xml', false);\r\n            xml.send();\r\n            dialog.gameStep = dialog.transition[id];\r\n        }\r\n    }\r\n    console.log('   checkStepPhrase ' + dialog.transition[id]);\r\n    console.log('checkStepPhrase end ');\r\n    console.log(' ');\r\n}\r\n\r\n"],"sourceRoot":""}