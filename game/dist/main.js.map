{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./game/game.ts","webpack:///./game/gameObject.ts","webpack:///./game/DRAW_ELEMENTS.ts","webpack:///./game/functions.ts","webpack:///./game/CHARACTER_WINDOW.ts","webpack:///./game/DIALOG.ts","webpack:///./game/text.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DRAW_ELEMENTS_1","functions_1","gameObject_1","DIALOG_1","widthButton","board","width","yButton1","height","yButton2","canvas","document","getElementById","context","getContext","Draw","DrawElements","socket","WebSocket","socketSendMessage","data","readyState","send","setTimeout","JSON","stringify","operation","username","innerText","onmessage","event","message","parse","console","log","style","position","marginTop","marginLeft","marginRight","answer","dialog","Dialog","fillTextButton","lineHeight","drawBoard","url","drawCustomer","customer","drawButton","textIn","buttonText","button1","button2","button3","button4","mouseCanvas","xmlTest","XMLHttpRequest","open","responseXML","getElementsByTagName","innerHTML","mouse","x","y","ask","specific","statisfactory","negative","answerAsk","positiv","answerStat","this","flag","pict","w","h","ctx","image","Image","src","window","addEventListener","drawImage","fillStyle","fillRect","text","maxWidth","left","font","words","split","countWords","length","line","testLine","measureText","centr","fillText","game_1","CHARACTER_WINDOW_1","countPlayer","redrawing","clearRect","max","min","textCustomer","random","Math","floor","e","undefined","offsetX","layerX","offsetY","layerY","endOfGame","check","checkGameProcess","linkAnswerSeller","characterWindow","text_customer","border","endGameFlag","end","gameOver","text_1","gameStep","linkStep","linkAnswerCustomer","points","transition","idPhrase","firstRandom","getStep","idPhrasesSeller","getPhraseSeller","getTextSeller","getPointsPhrase","getLinkAnswerCustomer","index","alert","button","phrase","checkStepPhrase","getAnswerCustomer","getTextCustomer","getNextStep","getLinkAnswerSeller","xml","step","idPhrases","phrases","children","phrasesResult","j","Number","id","question","next","phraseCustomer","phrasesCustomer","nextStep","link","type","tagName"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {DrawElements} from \"./DRAW_ELEMENTS\";\r\nimport {mouseCanvas, random} from \"./functions\";\r\nimport {board, customer, buttonText} from \"./gameObject\";\r\nimport {checkGameProcess} from \"./CHARACTER_WINDOW\";\r\nimport {Dialog} from \"./DIALOG\";\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n\r\nexport let widthButton = board.width/2 - 10;\r\nexport let yButton1 = board.height - 200 + 5;\r\nexport let yButton2 = board.height - 60 + 5;\r\n\r\nexport let canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById(\"gameboard\");\r\nexport let context = canvas.getContext(\"2d\");\r\nlet Draw = new DrawElements();\r\n\r\nlet socket = new WebSocket('ws://localhost:3000');\r\n\r\nlet socketSendMessage = function (data) {\r\n    if (!socket.readyState) {\r\n        setTimeout(function () {\r\n            socketSendMessage(data);\r\n        }, 100);\r\n    } else {\r\n        socket.send(data);\r\n    }\r\n};\r\n\r\nsocketSendMessage(JSON.stringify({\r\n    operation: \"game_size\",\r\n    username: document.getElementById(\"username\").innerText\r\n}));\r\n\r\nsocket.onmessage = function (event) {\r\n    let message = JSON.parse(event.data);\r\n    if (message.operation == \"game_size\"){\r\n        console.log('----------------------');\r\n        console.log(message);\r\n        canvas.style.height = message.height + \"px\";\r\n        canvas.style.width = message.width + \"px;\";\r\n        canvas.style.position = \"absolute\";\r\n        canvas.style.marginTop = '10px';\r\n        canvas.style.marginLeft = \"auto\";\r\n        canvas.style.marginRight = \"auto\";\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport let answer: number[] = [];\r\n\r\nexport let dialog = new Dialog();\r\ndialog.fillTextButton();\r\n\r\nexport let lineHeight = 20;    //межстрочный интервал\r\n/*если мы знаем высоту текста, то мы можем\r\nпредположить, что высота строки должна быть именно такой*/\r\nexport let marginLeft = 5;    //отступ слева\r\nexport let marginTop = 40;\r\n\r\n\r\nDraw.drawBoard(canvas, board.url);\r\nDraw.drawCustomer(canvas, customer.url, 250, 300);\r\nDraw.drawButton(canvas, 5, yButton1, widthButton, 90);\r\nDraw.drawButton(canvas, 5, yButton1 + 100, widthButton, 90);\r\nDraw.drawButton(canvas, widthButton + 15, yButton1, widthButton, 90);\r\nDraw.drawButton(canvas, widthButton + 15, yButton1 + 100, widthButton, 90);\r\n\r\n// Draw.textIn(context, buttonText.button1, marginLeft, yButton1 + lineHeight, widthButton, lineHeight,\"center\");\r\n// Draw.textIn(context, buttonText.button2, (marginLeft + widthButton + 15), yButton1 + lineHeight, widthButton, lineHeight,\"center\");\r\n// Draw.textIn(context, buttonText.button3, marginLeft, yButton1 + 90 + 25, widthButton, lineHeight,\"center\");\r\n// Draw.textIn(context, buttonText.button4, (marginLeft + widthButton + 15), yButton1 + 90 + 25, widthButton, lineHeight,\"center\");\r\nDraw.textIn(context, buttonText.button1, marginLeft, yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\nDraw.textIn(context, buttonText.button2, (marginLeft + widthButton + 15), yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\nDraw.textIn(context, buttonText.button3, marginLeft, yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\nDraw.textIn(context, buttonText.button4, (marginLeft + widthButton + 15), yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\nmouseCanvas();\r\n\r\n\r\nlet xmlTest = new XMLHttpRequest();\r\nxmlTest.open(\"GET\", './.xml', false);\r\nxmlTest.open(\"GET\", './DialogList/step' + 3 + '.xml', false);\r\nxmlTest.send();\r\nconsole.log(\"START \" + xmlTest.responseXML.getElementsByTagName(\"seller\")[0].getElementsByTagName(\"phrase\")[1].getElementsByTagName(\"step\")[0].innerHTML);\r\n//\r\n// aaa = xmlTest.responseXML.getElementsByTagName(\"phrase\");\r\n// console.log(\"aaa \" + aaa[5].children[0].innerHTML);","\r\nexport let board = {\r\n    width: 1080,\r\n    height: 720,\r\n    url: './src/back.jpg'\r\n};\r\n\r\nexport let customer = {\r\n    width: 250,\r\n    height: 340,\r\n    url: './src/customer.png'\r\n};\r\nexport let mouse = {\r\n    x:0,\r\n    y:0\r\n};\r\nexport let buttonText = {\r\n    button1: null,\r\n    button2: null,\r\n    button3: null,\r\n    button4: null,\r\n};\r\n\r\nexport let ask = {\r\n    specific: [],\r\n    statisfactory: [],\r\n    negative: []\r\n};\r\n\r\nexport let answerAsk = {\r\n    positiv: [],\r\n    statisfactory: [],\r\n    negative: []\r\n};\r\n\r\nexport let answerStat = {\r\n    positiv: [],\r\n    statisfactory: [],\r\n    negative: []\r\n};","export class DrawElements {\r\n    flag: boolean = true;\r\n\r\n    drawBoard(canvas: HTMLCanvasElement, pict: string, w?: number, h?: number): void {\r\n        let ctx = canvas.getContext('2d');\r\n        let image = new Image();\r\n        image.src = pict;\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n                ctx.fillStyle = \"rgba(0,0,0,0.7)\";\r\n                ctx.fillRect(0, (canvas.height - 200), canvas.width, 200);\r\n            })\r\n        } else {\r\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n\r\n            ctx.fillStyle = \"rgba(0,0,0,0.7)\";\r\n            ctx.fillRect(0, (canvas.height - 200), canvas.width, 200);\r\n        }\r\n    }\r\n\r\n    drawCustomer(canvas: HTMLCanvasElement, pict: string, w?: number, h?: number): void {\r\n        let ctx = canvas.getContext('2d');\r\n        let image = new Image();\r\n        image.src = pict;\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                ctx.drawImage(image, (canvas.width - w), (canvas.height - h - 200), w, h);\r\n            })\r\n        } else {\r\n            ctx.drawImage(image, (canvas.width - w), (canvas.height - h - 200), w, h);\r\n        }\r\n    }\r\n\r\n    drawButton(canvas: HTMLCanvasElement, x: number, y: number, width: number, height: number): void {\r\n        let ctx = canvas.getContext('2d');\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n                ctx.fillRect(x, y, width, height);\r\n            })\r\n        } else {\r\n            ctx.fillStyle = \"rgba(255,255,255,0.5)\";\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    textIn(context, text, marginLeft, marginTop, maxWidth, lineHeight, position ?: string) {\r\n        let left = marginLeft + 5;    //Отступ от левой границы элемента\r\n\r\n        //Если рисуем текст впервые\r\n        if (this.flag == true) {\r\n            window.addEventListener('load', function () {\r\n                context.font = \"16pt Calibri\"\r\n                var words = text.split(\" \");\r\n                var countWords = words.length;\r\n                var line = \"\";\r\n                for (var n = 0; n < countWords; n++) {\r\n                    var testLine = line + words[n] + \" \";\r\n                    var testWidth = context.measureText(testLine).width;\r\n                    if (testWidth > maxWidth) {\r\n                        if (position == \"center\") {\r\n                            let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                            marginLeft = left + centr;\r\n                        }\r\n                        context.fillStyle = \"Black\";\r\n                        context.fillText(line, marginLeft, marginTop);\r\n                        line = words[n] + \" \";\r\n                        marginTop += lineHeight;\r\n                    }\r\n                    else {\r\n                        line = testLine;\r\n                    }\r\n                }\r\n                if (position == \"center\") {\r\n                    let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                    marginLeft = left + centr;\r\n                }\r\n                context.fillStyle = \"Black\";\r\n                context.fillText(line, marginLeft, marginTop);\r\n            })\r\n        }\r\n        else{\r\n            context.font = \"16pt Calibri\"\r\n            var words = text.split(\" \");\r\n            var countWords = words.length;\r\n            var line = \"\";\r\n            for (var n = 0; n < countWords; n++) {\r\n                var testLine = line + words[n] + \" \";\r\n                var testWidth = context.measureText(testLine).width;\r\n                if (testWidth > maxWidth) {\r\n                    if (position == \"center\") {\r\n                        let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                        marginLeft = left + centr;\r\n                    }\r\n                    context.fillStyle = \"Black\";\r\n                    context.fillText(line, marginLeft, marginTop);\r\n                    line = words[n] + \" \";\r\n                    marginTop += lineHeight;\r\n                }\r\n                else {\r\n                    line = testLine;\r\n                }\r\n            }\r\n            if (position == \"center\") {\r\n                let centr = maxWidth / 2 - context.measureText(line).width / 2;\r\n                marginLeft = left + centr;\r\n            }\r\n            context.fillStyle = \"Black\";\r\n            context.fillText(line, marginLeft, marginTop);\r\n        }\r\n    }\r\n}","\r\nimport {board, customer, buttonText, mouse} from \"./gameObject\";\r\nimport {DrawElements} from \"./DRAW_ELEMENTS\";\r\nimport {canvas, context, widthButton, yButton1, marginLeft, marginTop, lineHeight, answer, dialog} from \"./game\";\r\nimport {checkGameProcess, endOfGame} from \"./CHARACTER_WINDOW\";\r\n\r\nlet countIndex = 0;     //Счётчик индекса, который позваляет отпределить уникальный ответ для 4 кнопки\r\nexport let countPlayer = 0;    //Количество очков у игрока\r\nlet answerButton: number[] = [0, 0, 0, 0, 0];   //хранит значение очков за ответ. [0] - всегда пустой, [1] - первая кнопка, [2] - вторая кнопка ...\r\n\r\nlet Draw = new DrawElements();\r\n\r\nexport let max: number = 1;    //Максимальное значенние рандомного числа, используемового для получения случайного ответа\r\nexport let min: number = 0;\r\n\r\nexport let typeAnswer: string;\r\nexport let answerCustomer: string;\r\nexport let textCustomer = \"\";\r\nexport let linkNextAnswerCustomer;\r\n\r\nexport function random(min,max): number\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n//Перерисовывает элеенты после выбора ответа\r\nfunction redrawing(canvas: HTMLCanvasElement, x: number, y: number, width: number, height: number): void {\r\n    let ctx = canvas.getContext('2d');\r\n    let image = new Image();\r\n    ctx.clearRect(x, y, width, height);\r\n\r\n    Draw.flag = false;\r\n    Draw.drawBoard(canvas, board.url);\r\n    Draw.drawCustomer(canvas, customer.url, 250, 300);\r\n    Draw.drawButton(canvas, 5, yButton1, widthButton, 90);\r\n    Draw.drawButton(canvas, widthButton + 15, yButton1, widthButton, 90);\r\n    Draw.drawButton(canvas, 5, yButton1 + 100, widthButton, 90);\r\n    Draw.drawButton(canvas, widthButton + 15, yButton1 + 100, widthButton, 90);\r\n\r\n    Draw.textIn(context, buttonText.button1, marginLeft, yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\n    Draw.textIn(context, buttonText.button2, (marginLeft + widthButton + 15), yButton1 + lineHeight, widthButton, lineHeight, \"center\");\r\n    Draw.textIn(context, buttonText.button3, marginLeft, yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\n    Draw.textIn(context, buttonText.button4, (marginLeft + widthButton + 15), yButton1 + 90 + 25, widthButton, lineHeight, \"center\");\r\n}\r\n\r\n//Реакция на щелчок мышки по окну игры\r\nexport function mouseCanvas() {\r\n    canvas.addEventListener(\"mousedown\", function (e) {\r\n\r\n        // mouse.x = e.pageX - this.offsetLeft;\r\n        // mouse.y = e.pageY - this.offsetTop;\r\n\r\n        mouse.x = e.offsetX==undefined?e.layerX:e.offsetX;\r\n        mouse.y = e.offsetY==undefined?e.layerY:e.offsetY;\r\n        console.log('MOUSE');\r\n        console.log( mouse.x + ' ' + mouse.y + ' !!!');\r\n        let endGame = endOfGame();\r\n        if (endGame == false) {\r\n            if ((mouse.x > 5) && (mouse.x < widthButton + 5) && (mouse.y > yButton1) && (mouse.y < yButton1 + 90)) {\r\n                // console.log('0 0 true');\r\n                dialog.check(0);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n            if ((mouse.x > widthButton + 15) && (mouse.x < board.width - 5) && (mouse.y > yButton1) && (mouse.y < yButton1 + 90)) {\r\n                // console.log('0 1 true')\r\n                dialog.check(1);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n            if ((mouse.x > 5) && (mouse.x < widthButton + 5) && (mouse.y > yButton1 + 105) && (mouse.y < board.height - 5)) {\r\n                // console.log('1 0 true');\r\n                dialog.check(2);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n            if ((mouse.x > widthButton + 15) && (mouse.x < board.width - 5) && (mouse.y > yButton1 + 105) && (mouse.y < board.height - 5)) {\r\n                // console.log('1 1 true')\r\n                dialog.check(3);\r\n                checkGameProcess();\r\n                dialog.fillTextButton(dialog.linkAnswerSeller);\r\n                redrawing(canvas, 5, yButton1, widthButton, 90);\r\n            }\r\n        }\r\n        checkGameProcess();\r\n    })\r\n\r\n}\r\n","import {board} from \"./gameObject\";\r\nimport {DrawElements} from \"./DRAW_ELEMENTS\";\r\nimport {canvas, context, dialog} from \"./game\";\r\n\r\nexport let characterWindow = document.getElementById(\"characterWindow\");\r\nlet text_customer = document.getElementById(\"text_customer\");\r\n// characterWindow.style.left = board.width + 30 + \"px\";\r\ncharacterWindow.style.marginTop = \"10px\";\r\ncharacterWindow.innerHTML = 'Счёт игрока:   0';\r\ncharacterWindow.style.border = \"0px\";\r\n\r\nlet Draw = new DrawElements();\r\nlet endGameFlag = false;\r\n\r\nexport function checkGameProcess(): void {\r\n    characterWindow.innerHTML = 'Счёт игрока:   ' + dialog.countPlayer;\r\n    text_customer.innerText = dialog.textCustomer;\r\n\r\n    if (dialog.countPlayer < 0 || dialog.end == true){\r\n        gameOver();\r\n        console.log(\"       GAME OVER\");\r\n    }\r\n    if (endGameFlag == true){\r\n        characterWindow.innerHTML = 'Счёт игрока:';\r\n    }\r\n}\r\nfunction gameOver(): void {\r\n    context.fillStyle = \"rgba(0,0,0)\";\r\n    context.clearRect(0, 0, board.width, board.height);\r\n    context.fillRect(0, 0, board.width, board.height);\r\n    let text: string = 'Клиент ушёл, вы проиграли';\r\n    context.font = \"32pt Calibri\";\r\n    context.fillStyle = 'white';\r\n    context.fillText(text, board.width/2 - context.measureText(text).width/2, board.height/2);\r\n\r\n    endGameFlag = true;\r\n}\r\nexport function endOfGame() {\r\n    if (endGameFlag == true){\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}","import {\r\n    checkStepPhrase,\r\n    firstRandom,\r\n    getAnswerCustomer,getLinkAnswerCustomer, getLinkAnswerSeller,\r\n    getNextStep,\r\n    getPhraseSeller, getPointsPhrase,\r\n    getStep, getTextCustomer,\r\n    getTextSeller\r\n} from \"./text\";\r\nimport {answerCustomer, countPlayer, linkNextAnswerCustomer, random} from \"./functions\";\r\nimport {buttonText} from \"./gameObject\";\r\n\r\nexport class Dialog{\r\n    answer: number[] = [];\r\n    gameStep: number = 1;       //Указатель на номер дивлога\r\n    linkStep: number = 1;\r\n    textCustomer: string = \"\";  //Ответ покупателя\r\n    linkAnswerCustomer: number[] = [];   //Ссылка на возможные ответы покупателя\r\n    linkAnswerSeller: number[] = [];\r\n    countPlayer: number = 0;    //Счётчик очков игрока\r\n    points : number[] = [];\r\n    transition: number[] = [];\r\n    end : boolean = false;\r\n\r\n    fillTextButton(idPhrase ?: number[]) {\r\n        if (this.end == false) {\r\n            console.log(\"       this.end    \" + this.end);\r\n            let i = 0;\r\n            //Если функция вызвана впервые, то idPhrase неизвестно => генерируем первые фразы вручную\r\n            if (idPhrase == undefined) {\r\n                idPhrase = firstRandom()\r\n            }\r\n\r\n            // let answer: number[] = [];\r\n            // let id = getIdSeller(this.gameStep, idPhrase); //храним массив id фраз, которые будем выводить\r\n            // let text = getTextSeller(id);   //Получаем вопросы продавца\r\n            // this.linkAnswerCustomer = getNextStep(id);\r\n            // console.log('linkAnswerCustomer ' + this.linkAnswerCustomer);\r\n\r\n            getStep(this.gameStep);\r\n            let idPhrasesSeller = getPhraseSeller(idPhrase);\r\n            let text = getTextSeller(idPhrasesSeller);\r\n            this.points = getPointsPhrase(idPhrasesSeller);\r\n            this.linkAnswerCustomer = getLinkAnswerCustomer(idPhrasesSeller);\r\n\r\n            //Случайным образом выводим текст вопроса на кнопки\r\n            let index = random(0, 3);\r\n            buttonText.button1 = text[index];\r\n            this.answer[0] = index;\r\n\r\n            index = random(0, 3);\r\n            buttonText.button2 = text[index];\r\n            while (buttonText.button2 == buttonText.button1) {\r\n                index = random(0, 3);\r\n                buttonText.button2 = text[index];\r\n            }\r\n            this.answer[1] = index;\r\n\r\n            index = random(0, 3);\r\n            buttonText.button3 = text[index];\r\n            while (buttonText.button3 == buttonText.button1 || buttonText.button3 == buttonText.button2) {\r\n\r\n                index = random(0, 3);\r\n                buttonText.button3 = text[index];\r\n            }\r\n            this.answer[2] = index;\r\n\r\n            index = random(0, 3);\r\n            buttonText.button4 = text[index];\r\n            while (buttonText.button4 == buttonText.button1 || buttonText.button4 == buttonText.button2 || buttonText.button4 == buttonText.button3) {\r\n                index = random(0, 3);\r\n                buttonText.button4 = text[index];\r\n                i += 1;\r\n                console.log(\"       i \" + i);\r\n                if (i > 5000) {\r\n                    alert(\"Ошибка\");\r\n                    break\r\n                }\r\n            }\r\n            i = 0;\r\n            this.answer[3] = index;\r\n            console.log('+++ ' + this.answer);\r\n            // return answer;  //Массив, в котором индекс - кнопка, а значение - корректность ответа\r\n        }\r\n    }\r\n\r\n    check(button: number): void {\r\n        let phrase;\r\n        //Правильный ответ\r\n        if (this.answer[button] == 0){\r\n            // this.countPlayer += 2;   //увеличиваем счёт игрока\r\n            // this.textCustomer = getAnswerCustomer(this.gameStep, \"correct\", this.linkAnswerCustomer[0]);\r\n            //\r\n            // this.linkAnswerSeller = getIdAnswerSeller(this.gameStep, \"correct\", this.linkAnswerCustomer[0]);\r\n            // this.gameStep +=1;\r\n            this.countPlayer += this.points[0];\r\n            checkStepPhrase(0);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[0]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n        //Удовлетвворительный ответ\r\n        if (this.answer[button] == 1){\r\n            this.countPlayer += this.points[1];\r\n            checkStepPhrase(1);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[1]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n        if (this.answer[button] == 2){\r\n            // this.countPlayer += 1;\r\n            // this.textCustomer = getAnswerCustomer(this.gameStep, \"statisfactory\", this.linkAnswerCustomer[2]);\r\n            //\r\n            // this.linkAnswerSeller = getIdAnswerSeller(this.gameStep, \"statisfactory\", this.linkAnswerCustomer[2]);\r\n            // this.gameStep +=1;\r\n            this.countPlayer += this.points[2];\r\n            checkStepPhrase(2);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[2]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n        if (this.answer[button] == 3){\r\n            // this.countPlayer += -1;\r\n            // this.textCustomer = getAnswerCustomer(this.gameStep, \"negative\", this.linkAnswerCustomer[3]);\r\n            //\r\n            // this.linkAnswerSeller = getIdAnswerSeller(this.gameStep, \"negative\", this.linkAnswerCustomer[3]);\r\n            // this.gameStep +=1;\r\n            this.countPlayer += this.points[3];\r\n            checkStepPhrase(3);\r\n            phrase = getAnswerCustomer(this.linkAnswerCustomer[3]);\r\n            console.log(phrase);\r\n            this.textCustomer = getTextCustomer(phrase);\r\n            this.gameStep = getNextStep(phrase);\r\n            this.linkAnswerSeller = getLinkAnswerSeller(phrase);\r\n        }\r\n\r\n        console.log('==== ' + button + ' ===== ' + this.textCustomer);\r\n    }\r\n\r\n}","import {random} from \"./functions\";\r\nimport {dialog} from \"./game\";\r\n\r\nlet xml = new XMLHttpRequest();\r\n// xml.open(\"GET\", './dialog.xml', false);\r\n// xml.send();\r\n// let count = xml.responseXML.getElementsByTagName(\"seller\")[0].childElementCount;\r\n// console.log('count ' + count);\r\nlet sellerText: string;\r\nlet customerText: string;\r\n\r\n\r\nexport function getStep(step: number){\r\n    console.log('getStep start');\r\n    if (step != 100) {\r\n        xml.open(\"GET\", './DialogList/step' + step + '.xml', false);\r\n        xml.send();\r\n        console.log('   gameStep ' + step);\r\n    }\r\n\r\n    console.log('getStep end ');\r\n    console.log(' ');\r\n}\r\n\r\n//Возвращает фразы с заданным ID\r\nexport function getPhraseSeller(idPhrases : number[]) {\r\n    console.log('getPhraseSeller start');\r\n    let phrases = xml.responseXML.getElementsByTagName(\"seller\")[0].children; //Получаем все фразы соответствующего типа на заданном шаге\r\n    let phrasesResult: any[] = [];\r\n    for (let i = 0; i < 4; i++){\r\n        for (let j = 0; j < phrases.length; j++){\r\n            if (Number(phrases[j].id) == idPhrases[i]){\r\n                phrasesResult[i] = phrases[j];\r\n            }\r\n        }\r\n    }\r\n    console.log(phrasesResult);\r\n    console.log('getPhraseSeller end ');\r\n    console.log(' ');\r\n    return phrasesResult;\r\n}\r\n\r\n//Возвращает количество очков за фразу\r\nexport function getPointsPhrase(phrases: HTMLElement[]): number[]{\r\n    console.log('getPointsPhrase start');\r\n    let points: number[] = [];\r\n    for (let i = 0; i < phrases.length; i ++){\r\n        points[i] = Number(phrases[i].getElementsByTagName(\"point\")[0].innerHTML);    //Выводим количество очков за фразу\r\n    }\r\n    console.log('   points: ' + points);\r\n    console.log('getPointsPhrase end ');\r\n    console.log(' ');\r\n    return points;\r\n}\r\n\r\nexport function getTextSeller(phrases: HTMLElement[]){\r\n    console.log('getTextSeller start');\r\n    let question: any[] = [];\r\n    for (let i = 0; i < phrases.length; i ++){\r\n        question[i] = phrases[i].getElementsByTagName(\"text\")[0].innerHTML;    //Выводим текст вопроса\r\n    }\r\n    console.log('getTextSeller end ');\r\n    console.log(' ');\r\n    return question;\r\n}\r\n\r\n//Возвращает ID ответа покупателя\r\nexport function getLinkAnswerCustomer(phrases: HTMLElement[]){\r\n    console.log('getLinkAnswerCustomer start');\r\n    let next;\r\n    let linkAnswerCustomer: number[] = [];\r\n    for (let i = 0; i < phrases.length; i ++){\r\n        if (phrases[i].getElementsByTagName(\"step\").length != 0) {\r\n            if (Number(phrases[i].getElementsByTagName(\"step\")[0].innerHTML) != 100) {\r\n                dialog.transition[i] = Number(phrases[i].getElementsByTagName(\"step\")[0].innerHTML);\r\n            } else {\r\n                dialog.transition[i] = null;\r\n            }\r\n        }\r\n        next = phrases[i].getElementsByTagName(\"next\")[0];\r\n        linkAnswerCustomer[i] = Number(next.children[random(0, next.children.length - 1)].innerHTML);\r\n    }\r\n    console.log('   ' + linkAnswerCustomer + \" dialog.transition \" + dialog.transition);\r\n    console.log('getLinkAnswerCustomer end ');\r\n    console.log(' ');\r\n    return linkAnswerCustomer\r\n}\r\n\r\n//Возвращает фразу покупателя\r\nexport function getAnswerCustomer(id: number){\r\n    console.log('getAnswerCustomer start');\r\n    let phrasesCustomer = xml.responseXML.getElementsByTagName(\"customer\")[0].children;\r\n    let phraseCustomer;\r\n    for (let i = 0; i < phrasesCustomer.length; i++){\r\n        if (Number(phrasesCustomer[i].id) == id){\r\n            phraseCustomer = phrasesCustomer[i];\r\n        }\r\n    }\r\n    console.log('getLinkAnswerCustomer end ');\r\n    console.log(' ');\r\n    return phraseCustomer;\r\n}\r\n\r\nexport function getTextCustomer(phrase: HTMLElement){\r\n    return phrase.getElementsByTagName(\"text\")[0].innerHTML;\r\n}\r\n\r\nexport function getNextStep(phrase: HTMLElement){\r\n    let nextStep: number;\r\n    console.log('getNextStep start');\r\n    //Если ссылка на страницу диалога не задана, то переходим к следующей странице\r\n    if (Number(phrase.getElementsByTagName(\"step\")[0].innerHTML) == 0){\r\n        nextStep = dialog.gameStep + 1;\r\n        console.log('   ' + nextStep);\r\n    }else{\r\n        nextStep = Number(phrase.getElementsByTagName(\"step\")[0].innerHTML);\r\n        console.log('   ' + nextStep);\r\n    }\r\n    console.log(\"STEP \" + phrase.getElementsByTagName(\"step\")[0].innerHTML);\r\n    //Если ссылка на окно диалога = 100, то конец игры\r\n    if (Number(phrase.getElementsByTagName(\"step\")[0].innerHTML) == 100){\r\n        console.log(\"           end\");\r\n        dialog.end = true;\r\n        return null;\r\n    }\r\n    console.log('getNextStep end ');\r\n    console.log(' ');\r\n    return nextStep;\r\n}\r\n\r\nexport function getLinkAnswerSeller(phrase: HTMLElement){\r\n    console.log('getLinkAnswerSeller start');\r\n    let link: number[] = [];\r\n    if (dialog.end == true){\r\n        return null\r\n    }\r\n\r\n    link[0] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"correct\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"correct\").length - 1)].innerHTML);\r\n    link[1] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\").length - 1)].innerHTML);\r\n    link[2] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\").length - 1)].innerHTML);\r\n    while (link[2] == link[1]){\r\n        link[2] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"statisfaction\").length - 1)].innerHTML);\r\n    }\r\n    link[3] = Number(phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"negative\")[random(0, phrase.getElementsByTagName(\"next\")[0].getElementsByTagName(\"negative\").length - 1)].innerHTML);\r\n    console.log('   link: ' + link);\r\n    console.log('getLinkAnswerSeller end ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    console.log(' ');\r\n    return link;\r\n}\r\n\r\nexport function firstRandom(){\r\n    console.log('firstRandom start');\r\n    xml.open(\"GET\", './DialogList/step1.xml', false);\r\n    xml.send();\r\n    let link:number[] = [];\r\n\r\n    let phrases = xml.responseXML.getElementsByTagName(\"seller\")[0].getElementsByTagName(\"phrase\");\r\n    let phrase = phrases[random(0, phrases.length - 1)];\r\n    let type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n    while (type != \"correct\"){\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[0] = Number(phrase.id);\r\n    }\r\n    link[0] = Number(phrase.id);\r\n    while (type != \"statisfaction\"){\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[1] = Number(phrase.id)\r\n    }\r\n    link[1] = Number(phrase.id);\r\n\r\n    phrase = phrases[random(0, phrases.length - 1)];\r\n    type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n    console.log (\"type \" + type + \" \" + (type != \"statisfaction\" && link[1] == link[2]));\r\n    let flag = true;\r\n    while (flag == true) {\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[2] = Number(phrase.id);\r\n        console.log(\"ss \" + link[1] + ' ' + link[2] + ' ' + type + ' ' + (type != \"statisfaction\" && link[1] == link[2]));\r\n        if ((type == \"statisfaction\") && (link[1] != link[2])){\r\n            flag = false;\r\n        }\r\n    }\r\n\r\n    phrase = phrases[random(0, phrases.length - 1)];\r\n    type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n    while (type != \"negative\"){\r\n        phrase = phrases[random(0, phrases.length - 1)];\r\n        type = phrase.getElementsByTagName(\"next\")[0].children[0].tagName;\r\n        link[3] = Number(phrase.id);\r\n    }\r\n    link[3] = Number(phrase.id);\r\n    console.log(link);\r\n    console.log('firstRandom end');\r\n    console.log(' ');\r\n    return link;\r\n}\r\n\r\n//Ссылается на номер диалога, если в фразе продавца задана ссылка\r\nexport function checkStepPhrase(id: number){\r\n    console.log('checkStepPhrase start');\r\n    if (dialog.transition[id] != null){\r\n        if (dialog.transition[id] != 0) {\r\n            xml.open(\"GET\", './DialogList/step' + dialog.transition[id] + '.xml', false);\r\n            xml.send();\r\n            dialog.gameStep = dialog.transition[id];\r\n        }\r\n    }\r\n    console.log('   checkStepPhrase ' + dialog.transition[id]);\r\n    console.log('checkStepPhrase end ');\r\n    console.log(' ');\r\n}\r\n\r\n"],"sourceRoot":""}